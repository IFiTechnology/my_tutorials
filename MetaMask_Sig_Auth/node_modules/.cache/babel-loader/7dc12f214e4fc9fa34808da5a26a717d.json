{"ast":null,"code":"var _jsxFileName = \"/Users/michaelcouch/Documents/Ethereum/My_Tutorials/react_metaMask_connection/metamask_conn/src/WalletCard.js\",\n    _s = $RefreshSig$();\n\n// https://docs.metamask.io/guide/ethereum-provider.html#using-the-provider\nimport React, { useState } from 'react';\nimport Web3 from 'web3';\nimport './WalletCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WalletCard = () => {\n  _s();\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [userBalance, setUserBalance] = useState(null);\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      console.log('MetaMask Here!');\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText('Wallet Connected');\n        getAccountBalance(result[0]);\n      });\n    } else {\n      console.log('Need to install MetaMask');\n      setErrorMessage('Please install MetaMask browser extension to interact');\n    }\n  }; // update account, will cause component re-render\n\n\n  const accountChangedHandler = newAccount => {\n    console.log('Account Changed');\n    setDefaultAccount(newAccount);\n  };\n\n  const getAccountBalance = account => {\n    window.ethereum.request({\n      method: 'eth_getBalance',\n      params: [account, 'latest']\n    }).then(balance => {\n      console.log(window.ethereum.fromWei(balance));\n    });\n  }; // listen for account changes\n\n\n  window.ethereum.on('accountsChanged', accountChangedHandler);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"walletCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      children: connButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accountDisplay\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Address: \", defaultAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"balanceDisplay\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Balance: \", userBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), errorMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n};\n\n_s(WalletCard, \"958uiNd4ZvD4oxPz84YlssYAopU=\");\n\n_c = WalletCard;\nexport default WalletCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletCard\");","map":{"version":3,"sources":["/Users/michaelcouch/Documents/Ethereum/My_Tutorials/react_metaMask_connection/metamask_conn/src/WalletCard.js"],"names":["React","useState","Web3","WalletCard","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","userBalance","setUserBalance","connButtonText","setConnButtonText","connectWalletHandler","window","ethereum","isMetaMask","console","log","request","method","then","result","accountChangedHandler","getAccountBalance","newAccount","account","params","balance","fromWei","on"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,gBAAD,CAApD;;AAEA,QAAMW,oBAAoB,GAAG,MAAM;AAClC,QAAIC,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBC,UAAvC,EAAmD;AAClDC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEAJ,MAAAA,MAAM,CAACC,QAAP,CAAgBI,OAAhB,CAAwB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAxB,EACCC,IADD,CACMC,MAAM,IAAI;AACfC,QAAAA,qBAAqB,CAACD,MAAM,CAAC,CAAD,CAAP,CAArB;AACAV,QAAAA,iBAAiB,CAAC,kBAAD,CAAjB;AACAY,QAAAA,iBAAiB,CAACF,MAAM,CAAC,CAAD,CAAP,CAAjB;AACA,OALD;AAOA,KAVD,MAUO;AACNL,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAZ,MAAAA,eAAe,CAAC,uDAAD,CAAf;AACA;AACD,GAfD,CAPwB,CAwBxB;;;AACA,QAAMiB,qBAAqB,GAAIE,UAAD,IAAgB;AAC7CR,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAV,IAAAA,iBAAiB,CAACiB,UAAD,CAAjB;AACA,GAHD;;AAKA,QAAMD,iBAAiB,GAAIE,OAAD,IAAa;AACtCZ,IAAAA,MAAM,CAACC,QAAP,CAAgBI,OAAhB,CAAwB;AAACC,MAAAA,MAAM,EAAE,gBAAT;AAA2BO,MAAAA,MAAM,EAAE,CAACD,OAAD,EAAU,QAAV;AAAnC,KAAxB,EACCL,IADD,CACMO,OAAO,IAAI;AAChBX,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACC,QAAP,CAAgBc,OAAhB,CAAwBD,OAAxB,CAAZ;AACA,KAHD;AAIA,GALD,CA9BwB,CAqCxB;;;AACAd,EAAAA,MAAM,CAACC,QAAP,CAAgBe,EAAhB,CAAmB,iBAAnB,EAAsCP,qBAAtC;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACC;AAAQ,MAAA,OAAO,EAAEV,oBAAjB;AAAA,gBAAwCF;AAAxC;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACC;AAAA,gCAAcJ,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFD,eAKC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACC;AAAA,gCAAcE,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YALD,EAQEJ,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAYA,CApDD;;GAAMD,U;;KAAAA,U;AAsDN,eAAeA,UAAf","sourcesContent":["// https://docs.metamask.io/guide/ethereum-provider.html#using-the-provider\n\nimport React, {useState} from 'react'\nimport Web3 from 'web3'\nimport './WalletCard.css'\n\nconst WalletCard = () => {\n\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\n\tconst [userBalance, setUserBalance] = useState(null);\n\tconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\n\n\tconst connectWalletHandler = () => {\n\t\tif (window.ethereum && window.ethereum.isMetaMask) {\n\t\t\tconsole.log('MetaMask Here!');\n\n\t\t\twindow.ethereum.request({ method: 'eth_requestAccounts'})\n\t\t\t.then(result => {\n\t\t\t\taccountChangedHandler(result[0]);\n\t\t\t\tsetConnButtonText('Wallet Connected');\n\t\t\t\tgetAccountBalance(result[0]);\n\t\t\t});\n\n\t\t} else {\n\t\t\tconsole.log('Need to install MetaMask');\n\t\t\tsetErrorMessage('Please install MetaMask browser extension to interact');\n\t\t}\n\t}\n\n\t// update account, will cause component re-render\n\tconst accountChangedHandler = (newAccount) => {\n\t\tconsole.log('Account Changed');\n\t\tsetDefaultAccount(newAccount);\n\t}\n\n\tconst getAccountBalance = (account) => {\n\t\twindow.ethereum.request({method: 'eth_getBalance', params: [account, 'latest']})\n\t\t.then(balance => {\n\t\t\tconsole.log(window.ethereum.fromWei(balance))\n\t\t});\n\t};\n\n\t// listen for account changes\n\twindow.ethereum.on('accountsChanged', accountChangedHandler);\n\t\n\treturn (\n\t\t<div className='walletCard'>\n\t\t\t<button onClick={connectWalletHandler}>{connButtonText}</button>\n\t\t\t<div className='accountDisplay'>\n\t\t\t\t<h3>Address: {defaultAccount}</h3>\n\t\t\t</div>\n\t\t\t<div className='balanceDisplay'>\n\t\t\t\t<h3>Balance: {userBalance}</h3>\n\t\t\t</div>\n\t\t\t{errorMessage}\n\t\t</div>\n\t);\n}\n\nexport default WalletCard;"]},"metadata":{},"sourceType":"module"}