{"ast":null,"code":"var _jsxFileName = \"/Users/michaelcouch/Documents/Ethereum/My_Tutorials/react_metaMask_connection/metamask_conn/src/WalletCardEthers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport './WalletCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WalletCardEthers = () => {\n  _s();\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [userBalance, setUserBalance] = useState(null);\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\n  const [provider, setProvider] = useState(null);\n\n  const connectWalletHandler = () => {\n    if (window.ethereum) {\n      // set ethers provider\n      setProvider(new ethers.providers.Web3Provider(window.ethereum)).then(result => console.log(result)); // connect to metamask\n\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        setConnButtonText('Wallet Connected');\n        console.log(result[0]);\n        getAccountBalance(result[0]);\n      }).catch(error => {\n        setErrorMessage(error);\n      });\n    } else {\n      console.log('Need to install MetaMask');\n      setErrorMessage('Please install MetaMask browser extension to interact');\n    }\n  };\n\n  const getAccountBalance = address => {\n    console.log(provider);\n    provider.getBalance(address).then(balanceResult => {//setUserBalance(ethers.utils.formatEther(balanceResult));\n      //console.log(balanceResult);\n    }).catch(error => {\n      setErrorMessage(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"walletCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \" Connection to MetaMask using ethers.js \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      children: connButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accountDisplay\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Address: \", defaultAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"balanceDisplay\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Balance: \", userBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), errorMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n\n_s(WalletCardEthers, \"5N58XA1uZrvpuh8zCzuRAA1K7to=\");\n\n_c = WalletCardEthers;\nexport default WalletCardEthers;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletCardEthers\");","map":{"version":3,"sources":["/Users/michaelcouch/Documents/Ethereum/My_Tutorials/react_metaMask_connection/metamask_conn/src/WalletCardEthers.js"],"names":["React","useState","ethers","WalletCardEthers","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","userBalance","setUserBalance","connButtonText","setConnButtonText","provider","setProvider","connectWalletHandler","window","ethereum","providers","Web3Provider","then","result","console","log","request","method","getAccountBalance","catch","error","address","getBalance","balanceResult"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAE9B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,gBAAD,CAApD;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMa,oBAAoB,GAAG,MAAM;AAClC,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACpB;AACAH,MAAAA,WAAW,CAAC,IAAIX,MAAM,CAACe,SAAP,CAAiBC,YAArB,CAAkCH,MAAM,CAACC,QAAzC,CAAD,CAAX,CAAgEG,IAAhE,CAAqEC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAA/E,EAFoB,CAIpB;;AACAL,MAAAA,MAAM,CAACC,QAAP,CAAgBO,OAAhB,CAAwB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAxB,EACCL,IADD,CACMC,MAAM,IAAI;AACfT,QAAAA,iBAAiB,CAAC,kBAAD,CAAjB;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAAC,CAAD,CAAlB;AACAK,QAAAA,iBAAiB,CAACL,MAAM,CAAC,CAAD,CAAP,CAAjB;AACA,OALD,EAMCM,KAND,CAMOC,KAAK,IAAI;AACftB,QAAAA,eAAe,CAACsB,KAAD,CAAf;AACA,OARD;AAUA,KAfD,MAeO;AACNN,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAjB,MAAAA,eAAe,CAAC,uDAAD,CAAf;AACA;AACD,GApBD;;AAsBA,QAAMoB,iBAAiB,GAAIG,OAAD,IAAa;AACtCP,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACCA,IAAAA,QAAQ,CAACiB,UAAT,CAAoBD,OAApB,EACCT,IADD,CACMW,aAAa,IAAI,CACtB;AACA;AACA,KAJD,EAKCJ,KALD,CAKOC,KAAK,IAAI;AACftB,MAAAA,eAAe,CAACsB,KAAD,CAAf;AACA,KAPD;AASD,GAXD;;AAaA,sBACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEC;AAAQ,MAAA,OAAO,EAAEb,oBAAjB;AAAA,gBAAwCJ;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACC;AAAA,gCAAcJ,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAHD,eAMC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACC;AAAA,gCAAcE,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAND,EASEJ,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAaA,CAxDD;;GAAMD,gB;;KAAAA,gB;AA0DN,eAAeA,gBAAf","sourcesContent":["import React, {useState} from 'react'\nimport {ethers} from 'ethers'\nimport './WalletCard.css'\n\nconst WalletCardEthers = () => {\n\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\n\tconst [userBalance, setUserBalance] = useState(null);\n\tconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\n\tconst [provider, setProvider] = useState(null);\n\n\tconst connectWalletHandler = () => {\n\t\tif (window.ethereum) {\n\t\t\t// set ethers provider\n\t\t\tsetProvider(new ethers.providers.Web3Provider(window.ethereum)).then(result => console.log(result));\n\n\t\t\t// connect to metamask\n\t\t\twindow.ethereum.request({ method: 'eth_requestAccounts'})\n\t\t\t.then(result => {\n\t\t\t\tsetConnButtonText('Wallet Connected');\n\t\t\t\tconsole.log(result[0]);\n\t\t\t\tgetAccountBalance(result[0]);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetErrorMessage(error);\n\t\t\t});\n\n\t\t} else {\n\t\t\tconsole.log('Need to install MetaMask');\n\t\t\tsetErrorMessage('Please install MetaMask browser extension to interact');\n\t\t}\n\t}\n\n\tconst getAccountBalance = (address) => {\n\t\tconsole.log(provider);\n\t\t\tprovider.getBalance(address)\n\t\t\t.then(balanceResult => {\n\t\t\t\t//setUserBalance(ethers.utils.formatEther(balanceResult));\n\t\t\t\t//console.log(balanceResult);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetErrorMessage(error);\n\t\t\t})\n\n\t}\n\t\n\treturn (\n\t\t<div className='walletCard'>\n\t\t<h4> Connection to MetaMask using ethers.js </h4>\n\t\t\t<button onClick={connectWalletHandler}>{connButtonText}</button>\n\t\t\t<div className='accountDisplay'>\n\t\t\t\t<h3>Address: {defaultAccount}</h3>\n\t\t\t</div>\n\t\t\t<div className='balanceDisplay'>\n\t\t\t\t<h3>Balance: {userBalance}</h3>\n\t\t\t</div>\n\t\t\t{errorMessage}\n\t\t</div>\n\t);\n}\n\nexport default WalletCardEthers;"]},"metadata":{},"sourceType":"module"}